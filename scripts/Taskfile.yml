version: '3'

vars:
  BLAZEGRAPH_ENDPOINT: http://blazegraph:8080/blazegraph/sparql

tasks:
  default:
    desc: Run all tasks
    cmds:
      - task: generate-vocabularies
      - task: ingest-vocabularies
      - task: cleanup

  cleanup:
    desc: Some cleanup tasks
    vars:
      QUERY: 
        sh: cat /scripts/queries/cleanup.sparql
    cmds:
      - curl --silent -X POST {{.BLAZEGRAPH_ENDPOINT}} --data-urlencode 'update={{.QUERY}}'

  drop-all:
    desc: Drops all the graphs
    prompt: This will remove all data from the triplestore. Do you want to continue?
    vars:
      QUERY: DROP ALL
    cmds:
      - curl --silent -X POST {{.BLAZEGRAPH_ENDPOINT}} --data-urlencode 'update={{.QUERY}}'
      - echo "All data removed from the triplestore"

  download-vocabularies:
    desc: Downloads the vocabularies from the web
    cmds:
      - task: _download-file
        vars:
          URL: https://raw.githubusercontent.com/swiss-art-research-net/aaao/d222508a578f36faf2713481b4e23d7f6ef35eff/Serialization/AAAo_v2.0.rdf
          FILE: /data/AAAo_V2.0.0.rdf

  generate-vocabularies:
    desc: Generates the vocabularies from CSV files
    cmds:
      - task: _generate_vocabulary
        vars:
          INPUTFILE: /data/input/provolone.csv
          NAMESPACE: https://vocabulary.swissartresearch.net/provolone#
          OUTPUTFILE: /data/ttl/provolone.ttl

  ingest-vocabularies:
    desc: Ingests the vocabularies into individual named Graphs
    cmds:
      - task: _ingest-data-from-file
        vars:
          NAME: Provolone
          FILE: /data/ttl/provolone.ttl
          TYPE: application/x-turtle
          GRAPH: https://vocabulary.swissartresearch.net/provolone/context
    
  _download-file:
    desc: Downloads a file from the web
    internal: true
    requires:
      vars: [URL, FILE]
    status:
      - test -f {{.FILE}}
    cmds:
      - echo "Downloading file from {{.URL}} to {{.FILE}}"
      - wget -q -O {{.FILE}} {{.URL}}
      - echo "Download complete"  
    
  _generate_vocabulary:
    internal: true
    requires:
      vars: [INPUTFILE, NAMESPACE, OUTPUTFILE]
    cmds:
      - python3 /scripts/convertCSVtoVocabulary.py --input {{.INPUTFILE}} --namespace {{.NAMESPACE}} --output {{.OUTPUTFILE}}

  _drop-graph:
    internal: true
    cmds:
      - curl --silent -X POST {{.BLAZEGRAPH_ENDPOINT}} --data-urlencode "update=DROP GRAPH <{{.GRAPH}}>" > /dev/null

  _ingest-data-from-file:
    internal: true
    vars:
      ENDPOINT: 
        sh: echo "{{if .ENDPOINT}}{{.ENDPOINT}}{{else}}{{.BLAZEGRAPH_ENDPOINT}}{{end}}"
    cmds:
      - echo "Ingest {{.NAME}}"
      - curl --silent -X POST {{.ENDPOINT}} --data-urlencode 'update={{if .GRAPH}}DROP GRAPH <{{.GRAPH}}>{{end}}'
      - curl -X POST -H 'Content-Type:{{.TYPE}}' --data-binary '@{{.FILE}}' {{.ENDPOINT}}{{if .GRAPH}}?context-uri={{.GRAPH}}{{end}}
